name: CD - Main
on: 
  push:
    branches:
      - main

jobs:
  compile-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - uses: actions/setup-go@v2
        with:
          go-version: 1.15
      
      - run: go run math.go
        working-directory: ./app

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: fabiolnh/ci:latest
          

  release-tags-versioning:
    needs: compile-and-push
    runs-on: ubuntu-latest
    outputs:
      outputsk: ${{ steps.changelog.outputs.skipped }}
      outputtagnova: ${{ steps.changelog.outputs.tag }}
    steps:
      - uses: actions/checkout@v3
      
      - name: Conventional Changelog Action
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3
        with:
          github-token: ${{ secrets.github_token }}
          release-count: "0"
          output-file: "false"
          skip-version-file: "true"
          skip-commit: "true"
          fallback-version: "1.0.0"
      - run: |
          echo " New version ${{ steps.changelog.outputs.tag }}"
          echo "::set-output name=outputtagnova::${{ steps.changelog.outputs.tag }}"
          echo "::set-output name=outputsk::${{ steps.changelog.outputs.skipped }}"

      - name: Create Release
        uses: actions/create-release@v1
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
          tag_named: ${{ steps.changelog.outputs.tag }}actions
        with:
          tag_name: ${{ steps.changelog.outputs.tag }}
          release_name: ${{ steps.changelog.outputs.tag }}
          body: ${{ steps.changelog.outputs.clean_changelog }}
      - run: |
            echo " TAG ${{ steps.previous-release.outputs.tag }}"
            echo "tag_env=${{ steps.changelog.outputs.tag }}" >> $GITHUB_ENV
            echo "${{ env.tag_name }}"
            echo "::set-output name=short_ref::${{ steps.changelog.outputs.tag }}"
            echo "::set-output name=outputsk::${{ steps.changelog.outputs.skipped }}"
